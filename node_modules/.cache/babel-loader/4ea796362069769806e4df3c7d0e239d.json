{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\DSpot\\\\src\\\\Map.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nvar map;\nvar markers = [];\nconst lotList = [];\nconst latList = [];\nvar subways;\n\nclass Map extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this._getMap = () => {\n      map = new window.Tmapv2.Map(\"map_div\", {\n        // 지도가 생성될 div\n        width: \"100%\",\n        // 지도의 넓이\n        height: \"400px\",\n        // 지도의 높이\n        zoom: 13\n      });\n      map.addListener(\"click\", getLonlat);\n    };\n\n    this._getSpot = () => {\n      const lot = this._getlotLat(lotList);\n\n      const lat = this._getlotLat(latList);\n\n      const _this$_getSubway = this._getSubway({\n        dSpotlat: lat,\n        dSpotlot: lot\n      }),\n            subwayLat = _this$_getSubway.subwayLat,\n            subwayLot = _this$_getSubway.subwayLot;\n\n      const marker = new window.Tmapv2.Marker({\n        position: new window.Tmapv2.LatLng(lat, lot),\n        //Marker의 중심좌표 설정.\n        icon: 'http://tmapapis.sktelecom.com/upload/tmap/marker/pin_b_m_b.png',\n        //Marker의 아이콘.\n        map: map //Marker가 표시될 Map 설정.\n\n      });\n    };\n\n    this._getSubway = async ({\n      dSpotlat,\n      dSpotlot\n    }) => {\n      subways = await this._callCategoryApi({\n        dSpotlat,\n        dSpotlot,\n        category: \"지하철;\"\n      });\n      console.log(subways);\n      subways.map(index => {\n        console.log(subways[index]);\n        subways[index].cafes = this._getCafe({\n          poi: subways[index]\n        });\n      });\n    };\n\n    this._getCafe = async ({\n      poi\n    }) => {\n      console.log(poi);\n      return await this._callCategoryApi({\n        dSpotlat: poi.frontLat,\n        dSpotlot: poi.frontLon,\n        category: \"스터디카페;카페\"\n      });\n    };\n\n    this._callCategoryApi = ({\n      dSpotlat,\n      dSpotlot,\n      category\n    }) => {\n      var url = \"https://apis.openapi.sk.com/tmap/pois/search/around?version=1&\";\n      var params = {\n        \"categories\": category,\n        \"resCoordType\": \"EPSG3857\",\n        //응답 좌표계 유형\n        \"reqCoordType\": \"WGS84GEO\",\n        //요청 좌표계 유형\n        \"centerLon\": dSpotlot,\n        \"centerLat\": dSpotlat,\n        \"appKey\": \"l7xxbfb4b13f846e43b8b0924bbda1166055\",\n        \"count\": 10,\n        \"radius\": 10\n      };\n      var esc = encodeURIComponent;\n      var query = Object.keys(params).map(k => esc(k) + '=' + esc(params[k])).join('&');\n      return fetch(url + query).then(response => response.json()).then(json => json.searchPoiInfo.pois.poi).catch(err => console.log(err));\n    };\n\n    this._getlotLat = list => {\n      var max = list[0];\n      var min = list[0];\n      list.map(num => {\n        if (max < num) max = num;\n        if (min > num) min = num;\n      });\n      return min + (max - min) / 2;\n    };\n  }\n\n  componentDidMount() {\n    this._getMap();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"map_div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this._getSpot(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"\\uC911\\uAC04\\uC9C0\\uC810\"));\n  }\n\n}\n\nfunction getLonlat(e) {\n  const lonlat = e.latLng; //Marker 객체 생성.\n\n  const marker = new window.Tmapv2.Marker({\n    position: new window.Tmapv2.LatLng(lonlat.lat(), lonlat.lng()),\n    //Marker의 중심좌표 설정.\n    map: map //Marker가 표시될 Map 설정.\n\n  });\n  markers.push(marker);\n  console.log(lonlat);\n  latList.push(lonlat.lat());\n  lotList.push(lonlat.lng());\n}\n\nexport default Map;","map":{"version":3,"sources":["C:/Git/DSpot/src/Map.js"],"names":["React","Component","PropTypes","map","markers","lotList","latList","subways","Map","_getMap","window","Tmapv2","width","height","zoom","addListener","getLonlat","_getSpot","lot","_getlotLat","lat","_getSubway","dSpotlat","dSpotlot","subwayLat","subwayLot","marker","Marker","position","LatLng","icon","_callCategoryApi","category","console","log","index","cafes","_getCafe","poi","frontLat","frontLon","url","params","esc","encodeURIComponent","query","Object","keys","k","join","fetch","then","response","json","searchPoiInfo","pois","catch","err","list","max","min","num","componentDidMount","render","e","lonlat","latLng","lng","push"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nvar map;\r\nvar markers = [];\r\nconst lotList = [];\r\nconst latList = [];\r\nvar subways;\r\nclass Map extends Component {\r\n\r\n    componentDidMount() {\r\n        this._getMap();\r\n    }\r\n    \r\n    _getMap  = () => {\r\n        map = new window.Tmapv2.Map(\"map_div\", { // 지도가 생성될 div\r\n\t\t\twidth : \"100%\", // 지도의 넓이\r\n            height : \"400px\", // 지도의 높이\r\n            zoom : 13\r\n            \r\n        });\r\n\r\n        map.addListener(\"click\", getLonlat);\r\n    }\r\n\r\n    _getSpot = () => {\r\n        const lot = this._getlotLat(lotList);\r\n        const lat = this._getlotLat(latList); \r\n        const { subwayLat, subwayLot } = this._getSubway({dSpotlat : lat, dSpotlot : lot});\r\n        \r\n        const marker = new window.Tmapv2.Marker({\r\n            position: new window.Tmapv2.LatLng(lat,lot), //Marker의 중심좌표 설정.\r\n\t\t\ticon: 'http://tmapapis.sktelecom.com/upload/tmap/marker/pin_b_m_b.png', //Marker의 아이콘.\r\n\t\t\tmap: map //Marker가 표시될 Map 설정.\r\n        });    \r\n    }\r\n\r\n    _getSubway = async ({dSpotlat, dSpotlot}) => {\r\n        subways = await this._callCategoryApi({dSpotlat, dSpotlot, category : \"지하철;\"});\r\n        console.log(subways);\r\n        subways.map(index => {\r\n            console.log(subways[index]);\r\n            subways[index].cafes = this._getCafe({poi : subways[index]});\r\n        }) \r\n    }\r\n\r\n    _getCafe = async ({poi}) => {\r\n        console.log(poi);\r\n        return await this._callCategoryApi({dSpotlat : poi.frontLat, dSpotlot : poi.frontLon, category : \"스터디카페;카페\"});\r\n    }\r\n\r\n    _callCategoryApi = ({dSpotlat, dSpotlot, category}) => {\r\n        var url = \"https://apis.openapi.sk.com/tmap/pois/search/around?version=1&\"\r\n        var params = {\r\n            \"categories\" : category,\r\n            \"resCoordType\" : \"EPSG3857\",//응답 좌표계 유형\r\n            \"reqCoordType\" : \"WGS84GEO\",//요청 좌표계 유형\r\n            \"centerLon\" : dSpotlot,\r\n            \"centerLat\" : dSpotlat,\r\n            \"appKey\" : \"l7xxbfb4b13f846e43b8b0924bbda1166055\",\r\n            \"count\" : 10,\r\n            \"radius\" : 10\r\n        }\r\n        var esc = encodeURIComponent;\r\n        var query = Object.keys(params)\r\n                    .map(k => esc(k) + '=' + esc(params[k]))\r\n                    .join('&');             \r\n        return fetch(url +query)\r\n        .then(response => response.json())\r\n        .then(json => json.searchPoiInfo.pois.poi)\r\n        .catch(err => console.log(err));\r\n    }\r\n    \r\n\r\n    _getlotLat = (list) => {\r\n        var max = list[0];\r\n        var min = list[0];\r\n        list.map(num=> {\r\n            if (max < num)\r\n                max = num;\r\n            \r\n            if (min > num)\r\n                min = num;\r\n        })\r\n\r\n        return min +((max - min) / 2)\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"map_div\"></div>\r\n                <button  onClick={() => this._getSpot()}>중간지점</button>\r\n            </div>\r\n        \r\n        \r\n        )\r\n    };\r\n}\r\n\r\nfunction getLonlat(e)  {\r\n    const lonlat = e.latLng;\r\n\t//Marker 객체 생성.\r\n    const marker = new window.Tmapv2.Marker({\r\n        position: new window.Tmapv2.LatLng(lonlat.lat(),lonlat.lng()), //Marker의 중심좌표 설정.\r\n        map: map //Marker가 표시될 Map 설정.\r\n\r\n    });\r\n    markers.push(marker);\r\n    console.log(lonlat);\r\n    latList.push(lonlat.lat());\r\n    lotList.push(lonlat.lng());\r\n}\r\n\r\nexport default Map;"]},"metadata":{},"sourceType":"module"}