{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\DSpot\\\\src\\\\Map.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nvar map;\nvar markers = [];\nconst lotList = [];\nconst latList = [];\n\nclass Map extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dSpotlat: 0,\n      dSpotlot: 0,\n      subway: [],\n      subwayCafe: {},\n      category: \"\"\n    };\n\n    this._getMap = () => {\n      map = new window.Tmapv2.Map(\"map_div\", {\n        // 지도가 생성될 div\n        width: \"100%\",\n        // 지도의 넓이\n        height: \"400px\",\n        // 지도의 높이\n        zoom: 13\n      });\n      map.addListener(\"click\", getLonlat);\n    };\n\n    this._getSpot = () => {\n      const lot = this._getlotLat(lotList);\n\n      const lat = this._getlotLat(latList);\n\n      this.setState({\n        dSpotlat: lat,\n        dSpotlot: lot\n      });\n\n      this._getSubway();\n\n      const marker = new window.Tmapv2.Marker({\n        position: new window.Tmapv2.LatLng(lat, lot),\n        //Marker의 중심좌표 설정.\n        icon: 'http://tmapapis.sktelecom.com/upload/tmap/marker/pin_b_m_b.png',\n        //Marker의 아이콘.\n        map: map //Marker가 표시될 Map 설정.\n\n      });\n    };\n\n    this._getSubway = async () => {\n      this.setState({\n        category: \"지하철;\"\n      });\n      const subways = await this._callCategoryApi();\n      console.log(subways);\n    };\n\n    this._callCategoryApi = () => {\n      return fetch(\"https://apis.openapi.sk.com/tmap/pois/search/around?version=1&format=xml&callback=result\", {\n        method: 'GET',\n        body: JSON.stringify({\n          \"categories\": this.state.category,\n          \"resCoordType\": \"EPSG3857\",\n          //응답 좌표계 유형\n          \"reqCoordType\": \"WGS84GEO\",\n          //요청 좌표계 유형\n          \"centerLon\": this.state.dSpotlot,\n          \"centerLat\": this.state.dSpotlat,\n          \"appKey\": \"l7xxbfb4b13f846e43b8b0924bbda1166055\",\n          \"count\": 10\n        })\n      }).then(response => response.json()).then(json => json.data.movies).catch(err => console.log(err));\n    };\n\n    this._getlotLat = list => {\n      var max = list[0];\n      var min = list[0];\n      list.map(num => {\n        if (max < num) max = num;\n        if (min > num) min = num;\n      });\n      return min + (max - min) / 2;\n    };\n  }\n\n  componentDidMount() {\n    this._getMap();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"map_div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this._getSpot(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"\\uC911\\uAC04\\uC9C0\\uC810\"));\n  }\n\n}\n\nfunction getLonlat(e) {\n  const lonlat = e.latLng; //Marker 객체 생성.\n\n  const marker = new window.Tmapv2.Marker({\n    position: new window.Tmapv2.LatLng(lonlat.lat(), lonlat.lng()),\n    //Marker의 중심좌표 설정.\n    map: map //Marker가 표시될 Map 설정.\n\n  });\n  markers.push(marker);\n  console.log(lonlat);\n  latList.push(lonlat.lat());\n  lotList.push(lonlat.lng());\n}\n\nexport default Map;","map":{"version":3,"sources":["C:/Git/DSpot/src/Map.js"],"names":["React","Component","PropTypes","map","markers","lotList","latList","Map","state","dSpotlat","dSpotlot","subway","subwayCafe","category","_getMap","window","Tmapv2","width","height","zoom","addListener","getLonlat","_getSpot","lot","_getlotLat","lat","setState","_getSubway","marker","Marker","position","LatLng","icon","subways","_callCategoryApi","console","log","fetch","method","body","JSON","stringify","then","response","json","data","movies","catch","err","list","max","min","num","componentDidMount","render","e","lonlat","latLng","lng","push"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nvar map;\r\nvar markers = [];\r\nconst lotList = [];\r\nconst latList = [];\r\nclass Map extends Component {\r\n\r\n    state = {\r\n        dSpotlat : 0,\r\n        dSpotlot : 0,\r\n        subway : [],\r\n        subwayCafe : {},\r\n        category : \"\" \r\n    } \r\n\r\n    componentDidMount() {\r\n        this._getMap();\r\n    }\r\n    \r\n    _getMap  = () => {\r\n        map = new window.Tmapv2.Map(\"map_div\", { // 지도가 생성될 div\r\n\t\t\twidth : \"100%\", // 지도의 넓이\r\n            height : \"400px\", // 지도의 높이\r\n            zoom : 13\r\n            \r\n        });\r\n\r\n        map.addListener(\"click\", getLonlat);\r\n    }\r\n\r\n    _getSpot = () => {\r\n        const lot = this._getlotLat(lotList);\r\n        const lat = this._getlotLat(latList);\r\n        this.setState({\r\n            dSpotlat : lat,\r\n            dSpotlot : lot\r\n        });\r\n        this._getSubway();\r\n        const marker = new window.Tmapv2.Marker({\r\n            position: new window.Tmapv2.LatLng(lat,lot), //Marker의 중심좌표 설정.\r\n\t\t\ticon: 'http://tmapapis.sktelecom.com/upload/tmap/marker/pin_b_m_b.png', //Marker의 아이콘.\r\n\t\t\tmap: map //Marker가 표시될 Map 설정.\r\n        });\r\n\r\n        \r\n    }\r\n\r\n    _getSubway = async () => {\r\n        this.setState({\r\n            category : \"지하철;\"\r\n        })\r\n        const subways = await this._callCategoryApi();\r\n        console.log(subways);\r\n    }\r\n\r\n    _callCategoryApi = () => {\r\n        return fetch(\"https://apis.openapi.sk.com/tmap/pois/search/around?version=1&format=xml&callback=result\", {\r\n            method : 'GET',\r\n            body: JSON.stringify({\r\n                \"categories\" : this.state.category,\r\n\t\t        \"resCoordType\" : \"EPSG3857\",//응답 좌표계 유형\r\n\t\t        \"reqCoordType\" : \"WGS84GEO\",//요청 좌표계 유형\r\n\t\t        \"centerLon\" : this.state.dSpotlot,\r\n\t\t        \"centerLat\" : this.state.dSpotlat,\r\n\t\t        \"appKey\" : \"l7xxbfb4b13f846e43b8b0924bbda1166055\",\r\n\t\t        \"count\" : 10\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(json => json.data.movies)\r\n        .catch(err => console.log(err));\r\n    }\r\n    \r\n\r\n    _getlotLat = (list) => {\r\n        var max = list[0];\r\n        var min = list[0];\r\n        list.map(num=> {\r\n            if (max < num)\r\n                max = num;\r\n            \r\n            if (min > num)\r\n                min = num;\r\n        })\r\n\r\n        return min +((max - min) / 2)\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"map_div\"></div>\r\n                <button  onClick={() => this._getSpot()}>중간지점</button>\r\n            </div>\r\n        \r\n        \r\n        )\r\n    };\r\n}\r\n\r\nfunction getLonlat(e)  {\r\n    const lonlat = e.latLng;\r\n\t//Marker 객체 생성.\r\n    const marker = new window.Tmapv2.Marker({\r\n        position: new window.Tmapv2.LatLng(lonlat.lat(),lonlat.lng()), //Marker의 중심좌표 설정.\r\n        map: map //Marker가 표시될 Map 설정.\r\n\r\n    });\r\n    markers.push(marker);\r\n    console.log(lonlat);\r\n    latList.push(lonlat.lat());\r\n    lotList.push(lonlat.lng());\r\n}\r\n\r\nexport default Map;"]},"metadata":{},"sourceType":"module"}