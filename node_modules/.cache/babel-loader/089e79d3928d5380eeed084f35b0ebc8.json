{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\DSpot\\\\src\\\\Map.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nvar map;\nvar markers = [];\nconst lotList = [];\nconst latList = [];\nvar subways = [];\nvar totalList = [];\nvar totalIndex = [];\n\nclass Map extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this._getMap = () => {\n      map = new window.Tmapv2.Map(\"map_div\", {\n        // 지도가 생성될 div\n        width: \"100%\",\n        // 지도의 넓이\n        height: \"400px\",\n        // 지도의 높이\n        zoom: 14\n      });\n      map.addListener(\"click\", getLonlat);\n    };\n\n    this._getSpot = () => {\n      const lot = this._getlotLat(lotList);\n\n      const lat = this._getlotLat(latList);\n\n      const marker = new window.Tmapv2.Marker({\n        position: new window.Tmapv2.LatLng(lat, lot),\n        //Marker의 중심좌표 설정.\n        icon: 'http://tmapapis.sktelecom.com/upload/tmap/marker/pin_b_m_b.png',\n        //Marker의 아이콘.\n        map: map //Marker가 표시될 Map 설정.\n\n      });\n\n      this._getSubway({\n        dSpotlat: lat,\n        dSpotlot: lot\n      });\n    };\n\n    this._getSubway = async ({\n      dSpotlat,\n      dSpotlot\n    }) => {\n      const searchPoiInfo = await this._callCategoryApi({\n        dSpotlat,\n        dSpotlot,\n        category: \"지하철;\"\n      });\n      subways = searchPoiInfo.pois.poi;\n      var index = 0;\n      subways.map(async (subway, index) => {\n        await this._callCafeCategoryApi({\n          dSpotlat: parseFloat(subway.frontLat),\n          dSpotlot: parseFloat(subway.frontLon),\n          category: \"스터디카페;카페;\",\n          i: index\n        });\n      });\n    };\n\n    this._callCategoryApi = ({\n      dSpotlat,\n      dSpotlot,\n      category\n    }) => {\n      var url = \"https://apis.openapi.sk.com/tmap/pois/search/around?version=1&\";\n      var params = {\n        \"categories\": category,\n        \"resCoordType\": \"WGS84GEO\",\n        //응답 좌표계 유형\n        \"reqCoordType\": \"WGS84GEO\",\n        //요청 좌표계 유형\n        \"centerLon\": dSpotlot,\n        \"centerLat\": dSpotlat,\n        \"appKey\": \"l7xxbfb4b13f846e43b8b0924bbda1166055\",\n        \"count\": 10,\n        \"radius\": 3\n      };\n      var esc = encodeURIComponent;\n      var query = Object.keys(params).map(k => esc(k) + '=' + esc(params[k])).join('&');\n      return fetch(url + query).then(response => response.json()).then(json => json.searchPoiInfo).catch(err => console.log(err));\n    };\n\n    this._getCafe = async ({\n      poi,\n      key\n    }) => {\n      const cafes = await this._callCafeCategoryApi({\n        dSpotlat: parseFloat(poi.frontLat),\n        dSpotlot: parseFloat(poi.frontLon),\n        category: \"스터디카페;카페;\",\n        i: key\n      });\n      poi.cafes = cafes;\n      await this._setTotalList({\n        totalCount: poi.cafes.totalCount,\n        index: key\n      });\n    };\n\n    this._callCafeCategoryApi = async ({\n      dSpotlat,\n      dSpotlot,\n      category,\n      i\n    }) => {\n      var url = \"https://apis.openapi.sk.com/tmap/pois/search/around?version=1&\";\n      var params = {\n        \"categories\": category,\n        \"resCoordType\": \"WGS84GEO\",\n        //응답 좌표계 유형\n        \"reqCoordType\": \"WGS84GEO\",\n        //요청 좌표계 유형\n        \"centerLon\": dSpotlot,\n        \"centerLat\": dSpotlat,\n        \"appKey\": \"l7xxbfb4b13f846e43b8b0924bbda1166055\",\n        \"count\": 10,\n        \"radius\": 10\n      };\n      var esc = encodeURIComponent;\n      var query = Object.keys(params).map(k => esc(k) + '=' + esc(params[k])).join('&');\n      const response = await fetch(url + query).catch(err => console.log(err));\n      const responseOk = response && response.ok;\n\n      if (responseOk) {\n        const result = await response.json();\n        const totalCount = result.searchPoiInfo.totalCount;\n        totalList.push({\n          totalCount: totalCount,\n          index: i\n        });\n        subways[i].cafes = result.searchPoiInfo;\n\n        if (subways.length == totalList.length) {\n          totalList.sort(function (a, b) {\n            // 오름차순\n            return b[\"totalCount\"] - a[\"totalCount\"];\n          });\n\n          this._createDSpot();\n        }\n      }\n    };\n\n    this._getlotLat = list => {\n      var max = list[0];\n      var min = list[0];\n      list.map(num => {\n        if (max < num) max = num;\n        if (min > num) min = num;\n      });\n      return min + (max - min) / 2;\n    };\n  }\n\n  componentDidMount() {\n    this._getMap();\n  }\n\n  _createDSpot() {\n    const index = totalList[0].index;\n    const marker = new window.Tmapv2.Marker({\n      position: new window.Tmapv2.LatLng(subways[index].frontLat, subways[index].frontLon),\n      //Marker의 중심좌표 설정.\n      icon: 'http://tmapapis.sktelecom.com/upload/tmap/marker/pin_b_m_b.png',\n      //Marker의 아이콘.\n      map: map //Marker가 표시될 Map 설정.\n\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"map_div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this._getSpot(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"\\uC911\\uAC04\\uC9C0\\uC810\"));\n  }\n\n}\n\nfunction getLonlat(e) {\n  const lonlat = e.latLng; //Marker 객체 생성.\n\n  const marker = new window.Tmapv2.Marker({\n    position: new window.Tmapv2.LatLng(lonlat.lat(), lonlat.lng()),\n    //Marker의 중심좌표 설정.\n    map: map //Marker가 표시될 Map 설정.\n\n  });\n  markers.push(marker);\n  console.log(lonlat);\n  latList.push(lonlat.lat());\n  lotList.push(lonlat.lng());\n}\n\nexport default Map;","map":{"version":3,"sources":["C:/Git/DSpot/src/Map.js"],"names":["React","Component","PropTypes","map","markers","lotList","latList","subways","totalList","totalIndex","Map","_getMap","window","Tmapv2","width","height","zoom","addListener","getLonlat","_getSpot","lot","_getlotLat","lat","marker","Marker","position","LatLng","icon","_getSubway","dSpotlat","dSpotlot","searchPoiInfo","_callCategoryApi","category","pois","poi","index","subway","_callCafeCategoryApi","parseFloat","frontLat","frontLon","i","url","params","esc","encodeURIComponent","query","Object","keys","k","join","fetch","then","response","json","catch","err","console","log","_getCafe","key","cafes","_setTotalList","totalCount","responseOk","ok","result","push","length","sort","a","b","_createDSpot","list","max","min","num","componentDidMount","render","e","lonlat","latLng","lng"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nvar map;\r\nvar markers = [];\r\nconst lotList = [];\r\nconst latList = [];\r\nvar subways = [];\r\nvar totalList = [];\r\nvar totalIndex = [];\r\nclass Map extends Component {\r\n\r\n    componentDidMount() {\r\n        this._getMap();\r\n    }\r\n    \r\n    _getMap  = () => {\r\n        map = new window.Tmapv2.Map(\"map_div\", { // 지도가 생성될 div\r\n\t\t\twidth : \"100%\", // 지도의 넓이\r\n            height : \"400px\", // 지도의 높이\r\n            zoom : 14\r\n            \r\n        });\r\n\r\n        map.addListener(\"click\", getLonlat);\r\n    }\r\n\r\n    _getSpot = () => {\r\n        const lot = this._getlotLat(lotList);\r\n        const lat = this._getlotLat(latList);\r\n        const marker = new window.Tmapv2.Marker({\r\n            position: new window.Tmapv2.LatLng(lat,lot), //Marker의 중심좌표 설정.\r\n\t\t\ticon: 'http://tmapapis.sktelecom.com/upload/tmap/marker/pin_b_m_b.png', //Marker의 아이콘.\r\n\t\t\tmap: map //Marker가 표시될 Map 설정.\r\n        });\r\n\r\n        this._getSubway({dSpotlat : lat, dSpotlot : lot});   \r\n    }\r\n\r\n    _getSubway = async ({dSpotlat, dSpotlot}) => {\r\n        const searchPoiInfo = await this._callCategoryApi({dSpotlat, dSpotlot, category : \"지하철;\"});\r\n        subways = searchPoiInfo.pois.poi;\r\n        var index = 0;\r\n        subways.map(async(subway, index) => {\r\n            await this._callCafeCategoryApi({dSpotlat : parseFloat(subway.frontLat), dSpotlot : parseFloat(subway.frontLon), category : \"스터디카페;카페;\", i : index});            \r\n        });\r\n    }\r\n\r\n    _callCategoryApi = ({dSpotlat, dSpotlot, category}) => {\r\n        var url = \"https://apis.openapi.sk.com/tmap/pois/search/around?version=1&\"\r\n        var params = {\r\n            \"categories\" : category,\r\n            \"resCoordType\" : \"WGS84GEO\",//응답 좌표계 유형\r\n            \"reqCoordType\" : \"WGS84GEO\",//요청 좌표계 유형\r\n            \"centerLon\" : dSpotlot,\r\n            \"centerLat\" : dSpotlat,\r\n            \"appKey\" : \"l7xxbfb4b13f846e43b8b0924bbda1166055\",\r\n            \"count\" : 10,\r\n            \"radius\" : 3\r\n        }\r\n        var esc = encodeURIComponent;\r\n        var query = Object.keys(params)\r\n                    .map(k => esc(k) + '=' + esc(params[k]))\r\n                    .join('&');             \r\n        return fetch(url +query)\r\n        .then(response => response.json())\r\n        .then(json => json.searchPoiInfo)\r\n        .catch(err => console.log(err));\r\n    }\r\n    _getCafe = async ({poi, key}) => {\r\n        const cafes = await this._callCafeCategoryApi({dSpotlat : parseFloat(poi.frontLat), dSpotlot : parseFloat(poi.frontLon), category : \"스터디카페;카페;\", i : key});\r\n        poi.cafes = cafes;\r\n        await this._setTotalList({totalCount : poi.cafes.totalCount, index : key}) \r\n    }\r\n\r\n    _callCafeCategoryApi = async ({dSpotlat, dSpotlot, category, i}) => {\r\n        var url = \"https://apis.openapi.sk.com/tmap/pois/search/around?version=1&\"\r\n        var params = {\r\n            \"categories\" : category,\r\n            \"resCoordType\" : \"WGS84GEO\",//응답 좌표계 유형\r\n            \"reqCoordType\" : \"WGS84GEO\",//요청 좌표계 유형\r\n            \"centerLon\" : dSpotlot,\r\n            \"centerLat\" : dSpotlat,\r\n            \"appKey\" : \"l7xxbfb4b13f846e43b8b0924bbda1166055\",\r\n            \"count\" : 10,\r\n            \"radius\" : 10\r\n        }\r\n        var esc = encodeURIComponent;\r\n        var query = Object.keys(params)\r\n                    .map(k => esc(k) + '=' + esc(params[k]))\r\n                    .join('&');             \r\n        const response = await fetch(url +query)\r\n        .catch(err => console.log(err));\r\n        const responseOk = response && response.ok; \r\n        if (responseOk) {\r\n            const result = await response.json();\r\n            const totalCount = result.searchPoiInfo.totalCount;\r\n            totalList.push( { totalCount : totalCount, index : i} );\r\n            subways[i].cafes = result.searchPoiInfo\r\n            if (subways.length == totalList.length) {\r\n                totalList.sort(function(a, b) { // 오름차순\r\n                    return b[\"totalCount\"] - a[\"totalCount\"];\r\n                });\r\n                this._createDSpot();\r\n            }\r\n        }\r\n    }\r\n\r\n    _createDSpot() {\r\n        const index = totalList[0].index\r\n        const marker = new window.Tmapv2.Marker({\r\n            position: new window.Tmapv2.LatLng(subways[index].frontLat,subways[index].frontLon), //Marker의 중심좌표 설정.\r\n\t\t\ticon: 'http://tmapapis.sktelecom.com/upload/tmap/marker/pin_b_m_b.png', //Marker의 아이콘.\r\n\t\t\tmap: map //Marker가 표시될 Map 설정.\r\n        }); \r\n    }\r\n     \r\n\r\n    _getlotLat = (list) => {\r\n        var max = list[0];\r\n        var min = list[0];\r\n        list.map(num=> {\r\n            if (max < num)\r\n                max = num;\r\n            \r\n            if (min > num)\r\n                min = num;\r\n        })\r\n\r\n        return min +((max - min) / 2)\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"map_div\"></div>\r\n                <button  onClick={() => this._getSpot()}>중간지점</button>\r\n            </div>\r\n        \r\n        \r\n        )\r\n    };\r\n}\r\n\r\nfunction getLonlat(e)  {\r\n    const lonlat = e.latLng;\r\n\t//Marker 객체 생성.\r\n    const marker = new window.Tmapv2.Marker({\r\n        position: new window.Tmapv2.LatLng(lonlat.lat(),lonlat.lng()), //Marker의 중심좌표 설정.\r\n        map: map //Marker가 표시될 Map 설정.\r\n\r\n    });\r\n    markers.push(marker);\r\n    console.log(lonlat);\r\n    latList.push(lonlat.lat());\r\n    lotList.push(lonlat.lng());\r\n}\r\n\r\nexport default Map;"]},"metadata":{},"sourceType":"module"}